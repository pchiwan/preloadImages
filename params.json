{"name":"preloadImages","tagline":"Make sure your images will be there when you need them","body":"# What does it do?\r\nSimply put: it fetches images and downloads them to your browser.\r\n\r\n\r\n# Why?\r\nI was playing around with [Masonry](http://masonry.desandro.com/) one day, testing cool CSS3 effects while dinamically loading pictures using infinite scroll... you know, having fun with JavaScript. I had been using the small plugin [imagesLoaded](http://desandro.github.io/imagesloaded/) -also by [desandro](https://github.com/desandro)- but, for some reason, it didn't work for me. Whenever I loaded new batches of images the Masonry was lost. At first I did what any curious developer would do: I went through the code, trying to find out what was going on. But I gave up soon because I decided to implement my own solution, with a different approach. Instead of asking 'You images done yet or what?', I will fetch them -preload them- so they'll be cached in the browser, thus making sure they'll already be downloadedwhen I need them.\r\n\r\n\r\n# How does it work?\r\nI've implemented this simple utility as a jQuery extension. So you use it like this:\r\n\r\n```javascript\r\nvar imageUrls = [\r\n\t//a bunch of image URLs\r\n];\r\n\r\n$.preloadImages(imageUrls);\r\n            \r\n```\r\n\r\nThis method returns a jQuery Deferred object that will be resolved when all the images have been loaded, so you can add more handlers to it if you wish. \r\n\r\n```javacript\r\nvar deferred = $.preloadImages(imageUrls);\r\n\r\ndeferred.always(function () {\r\n\t//TODO\r\n});\r\n\r\ndeferred.fail(function () {\r\n\t//TODO\r\n});\r\n```\r\n\r\nYou can also provide a callback function which will be executed when all the images have been loaded. Like this:\r\n\r\n```javascript\r\n$.preloadImages(imageUrls, function () {\r\n    alert('All images have been loaded!');\r\n});\r\n```\r\n\r\nAnd there is nothing more to it! \r\n\r\n# Demo\r\nYou can play with my example jsfiddle [here](http://jsfiddle.net/z2QuA/).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}